Input: tree = 5
            /   \
          7     8
        / 
      2
Output: 2 5 8
Explanation: In the above tree, the node 7 has only single chile. After removing the node the tree becomes  2<-5->8. Hence, the answer is 2 5 8 & it is in inorder traversal.
#code:
/*Complete the function below
Node is as follows:
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

// Return the root of the modified tree after removing all the half nodes.
class Solution {
  public:
    Node *RemoveHalfNodes(Node *root) {
       if(root == NULL){
           return NULL;
       }
       
       //traverse left and right child
       root -> left = RemoveHalfNodes(root -> left);
       root -> right= RemoveHalfNodes(root -> right);
       // means we found halfnode
       if(root -> left == NULL && root -> right != NULL){
            return root -> right;
       }
       if(root -> left != NULL && root -> right == NULL){
           return root->left;
       }
       return root;
    }
};
